package org.compi2.codigo3d.parser;

import java_cup.runtime.Symbol;

//PARSER PARA EL ARCHIVO DE ESCENARIOS
parser code
{://Codigo visible

    public void syntax_error(Symbol s){
        System.err.println(s);
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.err.println("T.T");
        System.err.println(s);
    }

:}

action code
{://Codigo de acciones
      
:}

terminal String ID, ENTERO, DECIMAL;
terminal TokenC3D MAS, MENOS, MULT, DIV, POT, PAR_IZQ, PAR_DER;
terminal TokenC3D MENORQUE, MAYORQUE, MENORIGUAL, MAYORIGUAL, IGUAL, DIFERENTE, AND, NOT, OR;
nonterminal NodoC3D inicial, expresion;
//Se determina la precedencia y asociatividad.
precedence	left		OR;
precedence	left		AND;
precedence	left		NOT;
precedence	left		MENORQUE, MAYORQUE, MENORIGUAL, MAYORIGUAL, IGUAL, DIFERENTE;
precedence	left 		MAS, MENOS;
precedence 	left 		MULT, DIV; 
precedence 	right 		POT; 

start with inicial;

inicial     ::= {: ControlC3D.reiniciar(); :} expresion:exp 
                    {: 
						if(exp.getCad().equalsIgnoreCase("")==false)
                        {
             	           ControlC3D.agregarC3D("//Ultima expresion: \n" + exp.getCad());
                 		}
                 		else
                 		{
                 		 ControlC3D.agregarC3D("//Etiquetas verdaderas: \n" +exp.getVerdadero()+"\n//Etiquetas falsas: \n"+exp.getFalso());
                 		}
                        RESULT = exp;
                    :};

					
					
expresion   ::= expresion:izq MAS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " + " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MENOS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " - " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MULT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " * " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq DIV expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " / " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq POT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " ^ " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   MENOS expresion:exp 
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = - " + exp.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |expresion:izq MENORQUE expresion:der
                    {: 
                        String v = ControlC3D.generarETQ();
						String f = ControlC3D.generarETQ();
                        String c3d = "if "  + izq.getCad() + " < " + der.getCad() + "then goto " + v + "\n";
						c3d += "goto " + f + "\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D("", f, v);  
                    :}
            |expresion:izq MAYORQUE expresion:der
                    {: 
                        String v = ControlC3D.generarETQ();
						String f = ControlC3D.generarETQ();
                        String c3d = "if "  + izq.getCad() + " > " + der.getCad() + "then goto " + v + "\n";
						c3d += "goto " + f + "\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D("", f, v); 
                    :}
            |expresion:izq MENORIGUAL expresion:der
                    {: 
                        String v = ControlC3D.generarETQ();
						String f = ControlC3D.generarETQ();
                        String c3d = "if "  + izq.getCad() + " <= " + der.getCad() + "then goto " + v + "\n";
						c3d += "goto " + f + "\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D("", f, v);  
                    :}
            |expresion:izq MAYORIGUAL expresion:der
                    {: 
                        String v = ControlC3D.generarETQ();
						String f = ControlC3D.generarETQ();
                        String c3d = "if "  + izq.getCad() + " >= " + der.getCad() + "then goto " + v + "\n";
						c3d += "goto " + f + "\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D("", f, v);  
                    :}
            |expresion:izq IGUAL expresion:der
                    {: 
						String v = ControlC3D.generarETQ();
						String f = ControlC3D.generarETQ();
                        String c3d = "if "  + izq.getCad() + " == " + der.getCad() + "then goto " + v + "\n";
						c3d += "goto " + f + "\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D("", f, v); 
                    :}
            |expresion:izq DIFERENTE expresion:der
                    {: 
                        String v = ControlC3D.generarETQ();
						String f = ControlC3D.generarETQ();
                        String c3d = "if "  + izq.getCad() + " != " + der.getCad() + "then goto " + v + "\n";
						c3d += "goto " + f + "\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D("", f, v); 
                    :}
            |expresion:izq OR 
					{:
						String c3d = izq.getFalso() + ":" + "\n";
						ControlC3D.agregarC3D(c3d);
					:}
					expresion:der
					{:
                        RESULT = new NodoC3D("", der.getFalso(), izq.getVerdadero() + "," +der.getVerdadero()); 
                    :}
            |expresion:izq AND
					{:
						String c3d = izq.getVerdadero() + ":" + "\n";
						ControlC3D.agregarC3D(c3d);
					:}
					expresion:der
					{:
						
                        RESULT = new NodoC3D("", izq.getFalso() + "," + der.getFalso(), der.getVerdadero()); 
                    :}
            |NOT PAR_IZQ expresion:der PAR_DER
                    {: 
						String v=der.getFalso();
                        String f=der.getVerdadero();   
                        RESULT = new NodoC3D("",f,v); 
                    :}
            |   PAR_IZQ expresion:exp PAR_DER   
                    {: RESULT = exp; :}
            |   ID:id           
                    {: RESULT = new NodoC3D(id); :}
            |   ENTERO:entero   
                    {: RESULT = new NodoC3D(entero); :}
            |   DECIMAL:decimal 
                    {: RESULT = new NodoC3D(decimal); :}
            ;